MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)


Started GET "/" for 127.0.0.1 at 2014-02-10 20:26:45 +0800
Processing by IndexController#index as HTML
Completed 500 Internal Server Error in 1.9ms

NoMethodError (undefined method `preferred_language_from' for #<ActionDispatch::Request:0x00000103f41c90>):
  app/controllers/application_controller.rb:7:in `set_locale'


  Rendered /Users/Eleven/.rvm/gems/ruby-2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_trace.erb (1.8ms)
  Rendered /Users/Eleven/.rvm/gems/ruby-2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.4ms)
  Rendered /Users/Eleven/.rvm/gems/ruby-2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (19.6ms)


Started GET "/" for 127.0.0.1 at 2014-02-10 20:29:16 +0800
Processing by IndexController#index as HTML
  Rendered index/index.html.erb within layouts/application (1166.5ms)
Completed 200 OK in 1199.0ms (Views: 1195.8ms)


Started GET "/index/get_hopes?limit=25&skip=0" for 127.0.0.1 at 2014-02-10 20:29:17 +0800
Processing by IndexController#get_hopes as JSON
  Parameters: {"limit"=>"25", "skip"=>"0"}
Completed 500 Internal Server Error in 117.2ms

Mongoid::Errors::InvalidIndex (
Problem:
  Invalid index specification on Hope: [[:user_id, 1], [:created_at, -1]], {}
Summary:
  Indexes in Mongoid are defined as a hash of field name and direction/2d pairs, with a hash for any additional options.
Resolution:
  Ensure that the index conforms to the correct syntax and has the correct options.

 Valid options are:
   background: true|false
   drop_dups: true|false
   name: 'index_name'
   sparse: true|false
   unique: true|false
   min: 1
   max: 1
   bits: 26
   bucket_size : 1
   weights: { content: 1, title: 2 }
 Valid types are: 1, -1, '2d', '2dsphere', 'geoHaystack', 'text', 'hashed'

 Example:
   class Band
     include Mongoid::Document
     index({ name: 1, label: -1 }, { sparse: true })
     index({ location: '2d' }, { background: true })
   end

):
  app/models/hope.rb:14:in `<class:Hope>'
  app/models/hope.rb:1:in `<top (required)>'
  app/controllers/index_controller.rb:20:in `get_hopes'


  Rendered /Users/Eleven/.rvm/gems/ruby-2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_trace.erb (1.8ms)
  Rendered /Users/Eleven/.rvm/gems/ruby-2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.3ms)
  Rendered /Users/Eleven/.rvm/gems/ruby-2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (9.9ms)


Started GET "/home?reading=new_messages_count" for 127.0.0.1 at 2014-02-10 20:29:19 +0800
Processing by UserHomesController#index as JSON
  Parameters: {"reading"=>"new_messages_count"}
Filter chain halted as :authorize rendered or redirected
Completed 200 OK in 1.4ms (Views: 0.4ms)


Started GET "/index/get_hopes?limit=25&skip=0" for 127.0.0.1 at 2014-02-10 20:29:24 +0800
Processing by IndexController#get_hopes as JSON
  Parameters: {"limit"=>"25", "skip"=>"0"}
Completed 500 Internal Server Error in 29.3ms

Mongoid::Errors::InvalidIndex (
Problem:
  Invalid index specification on Hope: [[:user_id, 1], [:created_at, -1]], {}
Summary:
  Indexes in Mongoid are defined as a hash of field name and direction/2d pairs, with a hash for any additional options.
Resolution:
  Ensure that the index conforms to the correct syntax and has the correct options.

 Valid options are:
   background: true|false
   drop_dups: true|false
   name: 'index_name'
   sparse: true|false
   unique: true|false
   min: 1
   max: 1
   bits: 26
   bucket_size : 1
   weights: { content: 1, title: 2 }
 Valid types are: 1, -1, '2d', '2dsphere', 'geoHaystack', 'text', 'hashed'

 Example:
   class Band
     include Mongoid::Document
     index({ name: 1, label: -1 }, { sparse: true })
     index({ location: '2d' }, { background: true })
   end

):
  app/models/hope.rb:14:in `<class:Hope>'
  app/models/hope.rb:1:in `<top (required)>'
  app/controllers/index_controller.rb:20:in `get_hopes'


  Rendered /Users/Eleven/.rvm/gems/ruby-2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.7ms)
  Rendered /Users/Eleven/.rvm/gems/ruby-2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.3ms)
  Rendered /Users/Eleven/.rvm/gems/ruby-2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (10.2ms)


Started GET "/" for 127.0.0.1 at 2014-02-10 20:36:12 +0800
Processing by IndexController#index as HTML
  Rendered index/index.html.erb within layouts/application (2.5ms)
Completed 200 OK in 11.0ms (Views: 10.8ms)


Started GET "/index/get_hopes?limit=25&skip=0" for 127.0.0.1 at 2014-02-10 20:36:12 +0800
Processing by IndexController#get_hopes as JSON
  Parameters: {"limit"=>"25", "skip"=>"0"}
Completed 500 Internal Server Error in 33.1ms

Mongoid::Errors::InvalidIndex (
Problem:
  Invalid index specification on Hope: [[:user_id, 1], [:created_at, -1]], {}
Summary:
  Indexes in Mongoid are defined as a hash of field name and direction/2d pairs, with a hash for any additional options.
Resolution:
  Ensure that the index conforms to the correct syntax and has the correct options.

 Valid options are:
   background: true|false
   drop_dups: true|false
   name: 'index_name'
   sparse: true|false
   unique: true|false
   min: 1
   max: 1
   bits: 26
   bucket_size : 1
   weights: { content: 1, title: 2 }
 Valid types are: 1, -1, '2d', '2dsphere', 'geoHaystack', 'text', 'hashed'

 Example:
   class Band
     include Mongoid::Document
     index({ name: 1, label: -1 }, { sparse: true })
     index({ location: '2d' }, { background: true })
   end

):
  app/models/hope.rb:14:in `<class:Hope>'
  app/models/hope.rb:1:in `<top (required)>'
  app/controllers/index_controller.rb:20:in `get_hopes'


  Rendered /Users/Eleven/.rvm/gems/ruby-2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_trace.erb (1.7ms)
  Rendered /Users/Eleven/.rvm/gems/ruby-2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (2.7ms)
  Rendered /Users/Eleven/.rvm/gems/ruby-2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (11.2ms)


Started GET "/home?reading=new_messages_count" for 127.0.0.1 at 2014-02-10 20:36:14 +0800
Processing by UserHomesController#index as JSON
  Parameters: {"reading"=>"new_messages_count"}
Filter chain halted as :authorize rendered or redirected
Completed 200 OK in 0.7ms (Views: 0.2ms)


Started GET "/" for 127.0.0.1 at 2014-02-10 20:45:53 +0800
Processing by IndexController#index as HTML
  Rendered index/index.html.erb within layouts/application (2.5ms)
Completed 200 OK in 12.5ms (Views: 12.3ms)


Started GET "/index/get_hopes?limit=25&skip=0" for 127.0.0.1 at 2014-02-10 20:45:53 +0800
Processing by IndexController#get_hopes as JSON
  Parameters: {"limit"=>"25", "skip"=>"0"}
Completed 500 Internal Server Error in 23.8ms

Mongoid::Errors::InvalidIndex (
Problem:
  Invalid index specification on Hope: [[:user_id, 1], [:created_at, -1]], {}
Summary:
  Indexes in Mongoid are defined as a hash of field name and direction/2d pairs, with a hash for any additional options.
Resolution:
  Ensure that the index conforms to the correct syntax and has the correct options.

 Valid options are:
   background: true|false
   drop_dups: true|false
   name: 'index_name'
   sparse: true|false
   unique: true|false
   min: 1
   max: 1
   bits: 26
   bucket_size : 1
   weights: { content: 1, title: 2 }
 Valid types are: 1, -1, '2d', '2dsphere', 'geoHaystack', 'text', 'hashed'

 Example:
   class Band
     include Mongoid::Document
     index({ name: 1, label: -1 }, { sparse: true })
     index({ location: '2d' }, { background: true })
   end

):
  app/models/hope.rb:14:in `<class:Hope>'
  app/models/hope.rb:1:in `<top (required)>'
  app/controllers/index_controller.rb:20:in `get_hopes'


  Rendered /Users/Eleven/.rvm/gems/ruby-2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_trace.erb (10.8ms)
  Rendered /Users/Eleven/.rvm/gems/ruby-2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.8ms)
  Rendered /Users/Eleven/.rvm/gems/ruby-2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (76.7ms)


Started GET "/home?reading=new_messages_count" for 127.0.0.1 at 2014-02-10 20:45:55 +0800
Processing by UserHomesController#index as JSON
  Parameters: {"reading"=>"new_messages_count"}
Filter chain halted as :authorize rendered or redirected
Completed 200 OK in 0.8ms (Views: 0.5ms)


Started GET "/" for 127.0.0.1 at 2014-02-13 12:28:51 +0800
Processing by IndexController#index as HTML
  Rendered index/index.html.erb within layouts/application (2.4ms)
Completed 200 OK in 34.2ms (Views: 33.9ms)


Started GET "/index/get_hopes?limit=25&skip=0" for 127.0.0.1 at 2014-02-13 12:28:52 +0800
Processing by IndexController#get_hopes as JSON
  Parameters: {"limit"=>"25", "skip"=>"0"}
Completed 500 Internal Server Error in 22.1ms

Mongoid::Errors::InvalidIndex (
Problem:
  Invalid index specification on Hope: [[:user_id, 1], [:created_at, -1]], {}
Summary:
  Indexes in Mongoid are defined as a hash of field name and direction/2d pairs, with a hash for any additional options.
Resolution:
  Ensure that the index conforms to the correct syntax and has the correct options.

 Valid options are:
   background: true|false
   drop_dups: true|false
   name: 'index_name'
   sparse: true|false
   unique: true|false
   min: 1
   max: 1
   bits: 26
   bucket_size : 1
   weights: { content: 1, title: 2 }
 Valid types are: 1, -1, '2d', '2dsphere', 'geoHaystack', 'text', 'hashed'

 Example:
   class Band
     include Mongoid::Document
     index({ name: 1, label: -1 }, { sparse: true })
     index({ location: '2d' }, { background: true })
   end

):
  app/models/hope.rb:14:in `<class:Hope>'
  app/models/hope.rb:1:in `<top (required)>'
  app/controllers/index_controller.rb:20:in `get_hopes'


  Rendered /Users/Eleven/.rvm/gems/ruby-2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_trace.erb (1.9ms)
  Rendered /Users/Eleven/.rvm/gems/ruby-2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.4ms)
  Rendered /Users/Eleven/.rvm/gems/ruby-2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (50.0ms)


Started GET "/home?reading=new_messages_count" for 127.0.0.1 at 2014-02-13 12:28:54 +0800
Processing by UserHomesController#index as JSON
  Parameters: {"reading"=>"new_messages_count"}
Filter chain halted as :authorize rendered or redirected
Completed 200 OK in 1.3ms (Views: 0.2ms)


Started GET "/" for 182.107.98.153 at 2014-02-13 12:31:54 +0800
Processing by IndexController#index as HTML
  Rendered index/index.html.erb within layouts/application (2.2ms)
Completed 200 OK in 9.1ms (Views: 8.9ms)


Started GET "/home?reading=new_messages_count" for 182.107.98.153 at 2014-02-13 12:32:08 +0800
Processing by UserHomesController#index as JSON
  Parameters: {"reading"=>"new_messages_count"}
Filter chain halted as :authorize rendered or redirected
Completed 200 OK in 0.8ms (Views: 0.2ms)


Started GET "/" for 114.249.23.53 at 2014-02-15 14:49:38 +0800
Processing by IndexController#index as HTML
  Rendered index/index.html.erb within layouts/application (987.1ms)
Completed 200 OK in 1038.5ms (Views: 1037.7ms)


Started GET "/index/get_hopes?limit=25&skip=0" for 114.249.23.53 at 2014-02-15 14:49:44 +0800
Processing by IndexController#get_hopes as JSON
  Parameters: {"limit"=>"25", "skip"=>"0"}
Completed 500 Internal Server Error in 137.4ms

Mongoid::Errors::InvalidIndex (
Problem:
  Invalid index specification on Hope: [[:user_id, 1], [:created_at, -1]], {}
Summary:
  Indexes in Mongoid are defined as a hash of field name and direction/2d pairs, with a hash for any additional options.
Resolution:
  Ensure that the index conforms to the correct syntax and has the correct options.

 Valid options are:
   background: true|false
   drop_dups: true|false
   name: 'index_name'
   sparse: true|false
   unique: true|false
   min: 1
   max: 1
   bits: 26
   bucket_size : 1
   weights: { content: 1, title: 2 }
 Valid types are: 1, -1, '2d', '2dsphere', 'geoHaystack', 'text', 'hashed'

 Example:
   class Band
     include Mongoid::Document
     index({ name: 1, label: -1 }, { sparse: true })
     index({ location: '2d' }, { background: true })
   end

):
  app/models/hope.rb:14:in `<class:Hope>'
  app/models/hope.rb:1:in `<top (required)>'
  app/controllers/index_controller.rb:20:in `get_hopes'


  Rendered /Users/Eleven/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.1ms)
  Rendered /Users/Eleven/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.9ms)
  Rendered /Users/Eleven/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (16.1ms)


Started GET "/home?reading=new_messages_count" for 114.249.23.53 at 2014-02-15 14:49:47 +0800
Processing by UserHomesController#index as JSON
  Parameters: {"reading"=>"new_messages_count"}
Filter chain halted as :authorize rendered or redirected
Completed 200 OK in 1.2ms (Views: 0.3ms)


Started GET "/index/get_hopes?limit=25&skip=0" for 114.249.23.53 at 2014-02-15 15:05:10 +0800
Processing by IndexController#get_hopes as JSON
  Parameters: {"limit"=>"25", "skip"=>"0"}
Completed 500 Internal Server Error in 23.2ms

Mongoid::Errors::InvalidIndex (
Problem:
  Invalid index specification on Hope: [[:user_id, 1], [:created_at, -1]], {}
Summary:
  Indexes in Mongoid are defined as a hash of field name and direction/2d pairs, with a hash for any additional options.
Resolution:
  Ensure that the index conforms to the correct syntax and has the correct options.

 Valid options are:
   background: true|false
   drop_dups: true|false
   name: 'index_name'
   sparse: true|false
   unique: true|false
   min: 1
   max: 1
   bits: 26
   bucket_size : 1
   weights: { content: 1, title: 2 }
 Valid types are: 1, -1, '2d', '2dsphere', 'geoHaystack', 'text', 'hashed'

 Example:
   class Band
     include Mongoid::Document
     index({ name: 1, label: -1 }, { sparse: true })
     index({ location: '2d' }, { background: true })
   end

):
  app/models/hope.rb:14:in `<class:Hope>'
  app/models/hope.rb:1:in `<top (required)>'
  app/controllers/index_controller.rb:20:in `get_hopes'


  Rendered /Users/Eleven/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_trace.erb (1.8ms)
  Rendered /Users/Eleven/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.4ms)
  Rendered /Users/Eleven/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (10.2ms)


Started GET "/" for 114.249.23.53 at 2014-02-15 15:10:07 +0800
Processing by IndexController#index as HTML
  Rendered index/index.html.erb within layouts/application (2.2ms)
Completed 200 OK in 10.6ms (Views: 9.9ms)


Started GET "/index/get_hopes?limit=25&skip=0" for 114.249.23.53 at 2014-02-15 15:10:08 +0800
Processing by IndexController#get_hopes as JSON
  Parameters: {"limit"=>"25", "skip"=>"0"}
Completed 500 Internal Server Error in 12.8ms

SyntaxError (/myFile/workspace/rorWork/spark/app/models/hope.rb:14: syntax error, unexpected ':', expecting '}'
  index {user_id: 1, created_at: -1}
                 ^
/myFile/workspace/rorWork/spark/app/models/hope.rb:15: syntax error, unexpected ':', expecting '}'
  index {follows: -1, finish: 1}
                 ^):
  app/controllers/index_controller.rb:20:in `get_hopes'


  Rendered /Users/Eleven/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_trace.erb (1.8ms)
  Rendered /Users/Eleven/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.7ms)
  Rendered /Users/Eleven/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (12.4ms)


Started GET "/home?reading=new_messages_count" for 114.249.23.53 at 2014-02-15 15:10:10 +0800
Processing by UserHomesController#index as JSON
  Parameters: {"reading"=>"new_messages_count"}
Filter chain halted as :authorize rendered or redirected
Completed 200 OK in 1.0ms (Views: 0.2ms)


Started GET "/" for 114.249.23.53 at 2014-02-15 15:11:05 +0800
Processing by IndexController#index as HTML
  Rendered index/index.html.erb within layouts/application (1.5ms)
Completed 200 OK in 9.1ms (Views: 8.5ms)


Started GET "/index/get_hopes?limit=25&skip=0" for 114.249.23.53 at 2014-02-15 15:11:05 +0800
Processing by IndexController#get_hopes as JSON
  Parameters: {"limit"=>"25", "skip"=>"0"}
Completed 500 Internal Server Error in 42.6ms

Mongoid::Errors::NoSessionConfig (
Problem:
  No configuration could be found for a session named 'default'.
Summary:
  When attempting to create the new session, Mongoid could not find a session configuration for the name: 'default'. This is necessary in order to know the host, port, and options needed to connect.
Resolution:
  Double check your mongoid.yml to make sure under the sessions key that a configuration exists for 'default'. If you have set the configuration programatically, ensure that 'default' exists in the configuration hash.):
  app/controllers/index_controller.rb:20:in `to_a'
  app/controllers/index_controller.rb:20:in `get_hopes'


  Rendered /Users/Eleven/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_trace.erb (1.8ms)
  Rendered /Users/Eleven/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.3ms)
  Rendered /Users/Eleven/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (9.8ms)


Started GET "/home?reading=new_messages_count" for 114.249.23.53 at 2014-02-15 15:11:08 +0800
Processing by UserHomesController#index as JSON
  Parameters: {"reading"=>"new_messages_count"}
Filter chain halted as :authorize rendered or redirected
Completed 200 OK in 1.0ms (Views: 0.2ms)


Started GET "/" for 114.249.23.53 at 2014-02-15 15:11:22 +0800
Processing by IndexController#index as HTML
  Rendered index/index.html.erb within layouts/application (2.1ms)
Completed 200 OK in 11.9ms (Views: 11.6ms)


Started GET "/index/get_hopes?limit=25&skip=0" for 114.249.23.53 at 2014-02-15 15:11:23 +0800
Processing by IndexController#get_hopes as JSON
  Parameters: {"limit"=>"25", "skip"=>"0"}
Completed 500 Internal Server Error in 1.1ms

Mongoid::Errors::NoSessionConfig (
Problem:
  No configuration could be found for a session named 'default'.
Summary:
  When attempting to create the new session, Mongoid could not find a session configuration for the name: 'default'. This is necessary in order to know the host, port, and options needed to connect.
Resolution:
  Double check your mongoid.yml to make sure under the sessions key that a configuration exists for 'default'. If you have set the configuration programatically, ensure that 'default' exists in the configuration hash.):
  app/controllers/index_controller.rb:20:in `to_a'
  app/controllers/index_controller.rb:20:in `get_hopes'


  Rendered /Users/Eleven/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.1ms)
  Rendered /Users/Eleven/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.4ms)
  Rendered /Users/Eleven/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (10.4ms)


Started GET "/home?reading=new_messages_count" for 114.249.23.53 at 2014-02-15 15:11:25 +0800
Processing by UserHomesController#index as JSON
  Parameters: {"reading"=>"new_messages_count"}
Filter chain halted as :authorize rendered or redirected
Completed 200 OK in 0.5ms (Views: 0.2ms)


Started GET "/" for 114.249.23.53 at 2014-02-15 15:13:22 +0800
Processing by IndexController#index as HTML
  Rendered index/index.html.erb within layouts/application (733.4ms)
Completed 200 OK in 751.4ms (Views: 750.7ms)


Started GET "/index/get_hopes?limit=25&skip=0" for 114.249.23.53 at 2014-02-15 15:13:23 +0800
Processing by IndexController#get_hopes as JSON
  Parameters: {"limit"=>"25", "skip"=>"0"}
  MOPED: 127.0.0.1:27017 COMMAND      database=admin command={:ismaster=>1} (1.8232ms)
  MOPED: 127.0.0.1:27017 QUERY        database=spark_development collection=hopes selector={"$query"=>{"finish"=>false}, "$orderby"=>{"follows"=>-1}} flags=[:slave_ok] limit=25 skip=0 batch_size=nil fields=nil (0.3393ms)
Completed 200 OK in 76.8ms (Views: 0.5ms)


Started GET "/home?reading=new_messages_count" for 114.249.23.53 at 2014-02-15 15:13:26 +0800
Processing by UserHomesController#index as JSON
  Parameters: {"reading"=>"new_messages_count"}
Filter chain halted as :authorize rendered or redirected
Completed 200 OK in 1.0ms (Views: 0.3ms)


Started GET "/" for 114.249.23.53 at 2014-02-15 15:13:40 +0800
Processing by IndexController#index as HTML
  Rendered index/index.html.erb within layouts/application (2.2ms)
Completed 200 OK in 9.8ms (Views: 9.5ms)


Started GET "/index/get_hopes?limit=25&skip=0" for 114.249.23.53 at 2014-02-15 15:13:40 +0800
Processing by IndexController#get_hopes as JSON
  Parameters: {"limit"=>"25", "skip"=>"0"}
  MOPED: 127.0.0.1:27017 QUERY        database=spark_development collection=hopes selector={"$query"=>{"finish"=>false}, "$orderby"=>{"follows"=>-1}} flags=[:slave_ok] limit=25 skip=0 batch_size=nil fields=nil (0.8991ms)
Completed 200 OK in 2.7ms (Views: 0.4ms)


Started GET "/hopes/new" for 114.249.23.53 at 2014-02-15 15:13:41 +0800
Processing by HopesController#new as HTML
  Rendered hopes/_form.html.erb (56.0ms)
  Rendered hopes/new.html.erb within layouts/application (101.3ms)
Completed 500 Internal Server Error in 122.1ms

ActionView::Template::Error (undefined method `after_commit' for HopeImage:Class):
    41: 					<div class="hope_form_uploaded_image_name"></div>
    42: 				</div>
    43: 				<div id="hope_form_uploaded_images_box">
    44: 					<% images = HopeImage.find(@hope.image_ids) %>	          
    45: 					<% images.each_with_index do |image, index| 
    46: 						image_id = image.id.to_s
    47: 						# mini the image to perfect size for thum show
  app/models/hope_image.rb:12:in `<class:HopeImage>'
  app/models/hope_image.rb:1:in `<top (required)>'
  app/views/hopes/_form.html.erb:44:in `_app_views_hopes__form_html_erb___1779195043550176798_2159755480'
  app/views/hopes/new.html.erb:1:in `_app_views_hopes_new_html_erb__2830067918438917283_2159844880'
  app/controllers/hopes_controller.rb:7:in `new'


  Rendered /Users/Eleven/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.1ms)
  Rendered /Users/Eleven/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.5ms)
  Rendered /Users/Eleven/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/template_error.erb within rescues/layout (10.6ms)


Started GET "/" for 114.249.23.53 at 2014-02-15 15:24:58 +0800
Processing by IndexController#index as HTML
  Rendered index/index.html.erb within layouts/application (2.3ms)
Completed 200 OK in 10.1ms (Views: 9.8ms)


Started GET "/index/get_hopes?limit=25&skip=0" for 114.249.23.53 at 2014-02-15 15:24:58 +0800
Processing by IndexController#get_hopes as JSON
  Parameters: {"limit"=>"25", "skip"=>"0"}
  MOPED: 127.0.0.1:27017 COMMAND      database=admin command={:ismaster=>1} (1.9000ms)
  MOPED: 127.0.0.1:27017 QUERY        database=spark_development collection=hopes selector={"$query"=>{"finish"=>false}, "$orderby"=>{"follows"=>-1}} flags=[:slave_ok] limit=25 skip=0 batch_size=nil fields=nil (0.3860ms)
Completed 200 OK in 4.2ms (Views: 0.3ms)


Started GET "/home?reading=new_messages_count" for 114.249.23.53 at 2014-02-15 15:25:00 +0800
Processing by UserHomesController#index as JSON
  Parameters: {"reading"=>"new_messages_count"}
Filter chain halted as :authorize rendered or redirected
Completed 200 OK in 0.6ms (Views: 0.2ms)


Started GET "/" for 127.0.0.1 at 2014-02-15 15:28:03 +0800
Processing by IndexController#index as HTML
  Rendered index/index.html.erb within layouts/application (694.8ms)
Completed 200 OK in 710.8ms (Views: 710.2ms)


Started GET "/index/get_hopes?limit=25&skip=0" for 127.0.0.1 at 2014-02-15 15:28:04 +0800
Processing by IndexController#get_hopes as JSON
  Parameters: {"limit"=>"25", "skip"=>"0"}
  MOPED: 127.0.0.1:27017 COMMAND      database=admin command={:ismaster=>1} (2.0010ms)
  MOPED: 127.0.0.1:27017 QUERY        database=spark_development collection=hopes selector={"$query"=>{"finish"=>false}, "$orderby"=>{"follows"=>-1}} flags=[:slave_ok] limit=25 skip=0 batch_size=nil fields=nil (0.4423ms)
Completed 200 OK in 76.2ms (Views: 0.3ms)


Started GET "/home?reading=new_messages_count" for 127.0.0.1 at 2014-02-15 15:28:06 +0800
Processing by UserHomesController#index as JSON
  Parameters: {"reading"=>"new_messages_count"}
Filter chain halted as :authorize rendered or redirected
Completed 200 OK in 0.9ms (Views: 0.2ms)


Started GET "/hopes/new" for 127.0.0.1 at 2014-02-15 15:28:07 +0800
Processing by HopesController#new as HTML
  Rendered hopes/_form.html.erb (30.8ms)
  Rendered hopes/new.html.erb within layouts/application (35.0ms)
Completed 500 Internal Server Error in 37.8ms

ActionView::Template::Error (undefined method `after_commit' for HopeImage:Class):
    41: 					<div class="hope_form_uploaded_image_name"></div>
    42: 				</div>
    43: 				<div id="hope_form_uploaded_images_box">
    44: 					<% images = HopeImage.find(@hope.image_ids) %>	          
    45: 					<% images.each_with_index do |image, index| 
    46: 						image_id = image.id.to_s
    47: 						# mini the image to perfect size for thum show
  app/models/hope_image.rb:12:in `<class:HopeImage>'
  app/models/hope_image.rb:1:in `<top (required)>'
  app/views/hopes/_form.html.erb:44:in `_app_views_hopes__form_html_erb__456289490788394034_2185976180'
  app/views/hopes/new.html.erb:1:in `_app_views_hopes_new_html_erb__3598456771095687876_2185895000'
  app/controllers/hopes_controller.rb:7:in `new'


  Rendered /Users/Eleven/.rvm/gems/ruby-2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.7ms)
  Rendered /Users/Eleven/.rvm/gems/ruby-2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.4ms)
  Rendered /Users/Eleven/.rvm/gems/ruby-2.1.0/gems/actionpack-3.2.16/lib/action_dispatch/middleware/templates/rescues/template_error.erb within rescues/layout (14.1ms)


Started GET "/" for 127.0.0.1 at 2014-02-15 16:10:18 +0800
Processing by IndexController#index as HTML
  Rendered index/index.html.erb within layouts/application (588.7ms)
Completed 200 OK in 605.9ms (Views: 605.3ms)


Started GET "/index/get_hopes?limit=25&skip=0" for 127.0.0.1 at 2014-02-15 16:10:19 +0800
Processing by IndexController#get_hopes as JSON
  Parameters: {"limit"=>"25", "skip"=>"0"}
  MOPED: 127.0.0.1:27017 COMMAND      database=admin command={:ismaster=>1} (1.3599ms)
  MOPED: 127.0.0.1:27017 QUERY        database=spark_development collection=hopes selector={"$query"=>{"finish"=>false}, "$orderby"=>{"follows"=>-1}} flags=[:slave_ok] limit=25 skip=0 batch_size=nil fields=nil (0.3362ms)
Completed 200 OK in 64.8ms (Views: 0.3ms)


Started GET "/home?reading=new_messages_count" for 127.0.0.1 at 2014-02-15 16:10:21 +0800
Processing by UserHomesController#index as JSON
  Parameters: {"reading"=>"new_messages_count"}
Filter chain halted as :authorize rendered or redirected
Completed 200 OK in 0.9ms (Views: 0.2ms)


Started GET "/hopes/new" for 127.0.0.1 at 2014-02-15 16:10:21 +0800
Processing by HopesController#new as HTML
  Rendered hopes/_form.html.erb (32.8ms)
  Rendered hopes/new.html.erb within layouts/application (36.2ms)
Completed 200 OK in 44.6ms (Views: 43.7ms)


Started GET "/home?reading=new_messages_count" for 127.0.0.1 at 2014-02-15 16:10:23 +0800
Processing by UserHomesController#index as JSON
  Parameters: {"reading"=>"new_messages_count"}
Filter chain halted as :authorize rendered or redirected
Completed 200 OK in 0.6ms (Views: 0.2ms)


Started GET "/hopes/new" for 127.0.0.1 at 2014-02-15 16:14:11 +0800
Processing by HopesController#new as HTML
  Rendered hopes/_form.html.erb (5.0ms)
  Rendered hopes/new.html.erb within layouts/application (5.7ms)
Completed 200 OK in 14.2ms (Views: 13.8ms)


Started GET "/home?reading=new_messages_count" for 127.0.0.1 at 2014-02-15 16:14:13 +0800
Processing by UserHomesController#index as JSON
  Parameters: {"reading"=>"new_messages_count"}
Filter chain halted as :authorize rendered or redirected
Completed 200 OK in 0.5ms (Views: 0.2ms)


Started GET "/hopes/new" for 127.0.0.1 at 2014-02-15 16:16:34 +0800
Processing by HopesController#new as HTML
  Rendered hopes/_form.html.erb (4.9ms)
  Rendered hopes/new.html.erb within layouts/application (5.6ms)
Completed 200 OK in 12.8ms (Views: 11.9ms)


Started GET "/home?reading=new_messages_count" for 127.0.0.1 at 2014-02-15 16:16:36 +0800
Processing by UserHomesController#index as JSON
  Parameters: {"reading"=>"new_messages_count"}
Filter chain halted as :authorize rendered or redirected
Completed 200 OK in 0.5ms (Views: 0.2ms)


Started GET "/hopes/new" for 127.0.0.1 at 2014-02-15 16:18:21 +0800
Processing by HopesController#new as HTML
  Rendered hopes/_form.html.erb (35.7ms)
  Rendered hopes/new.html.erb within layouts/application (39.8ms)
Completed 200 OK in 56ms (Views: 55.2ms)


Started GET "/home?reading=new_messages_count" for 127.0.0.1 at 2014-02-15 16:18:24 +0800
Processing by UserHomesController#index as JSON
  Parameters: {"reading"=>"new_messages_count"}
Filter chain halted as :authorize rendered or redirected
Completed 200 OK in 1ms (Views: 0.3ms)


Started GET "/hopes/new" for 127.0.0.1 at 2014-02-15 16:18:32 +0800
Processing by HopesController#new as HTML
  Rendered hopes/_form.html.erb (7.4ms)
  Rendered hopes/new.html.erb within layouts/application (9.1ms)
Completed 200 OK in 17ms (Views: 16.4ms)


Started GET "/home?reading=new_messages_count" for 127.0.0.1 at 2014-02-15 16:18:35 +0800
Processing by UserHomesController#index as JSON
  Parameters: {"reading"=>"new_messages_count"}
Filter chain halted as :authorize rendered or redirected
Completed 200 OK in 1ms (Views: 0.2ms)


Started GET "/" for 127.0.0.1 at 2014-02-15 16:18:35 +0800
Processing by IndexController#index as HTML
  Rendered index/index.html.erb within layouts/application (2.9ms)
Completed 200 OK in 11ms (Views: 10.5ms)


Started GET "/index/get_hopes?limit=25&skip=0" for 127.0.0.1 at 2014-02-15 16:18:35 +0800
Processing by IndexController#get_hopes as JSON
  Parameters: {"limit"=>"25", "skip"=>"0"}
  MOPED: 127.0.0.1:27017 COMMAND      database=admin command={:ismaster=>1} (2.3818ms)
  MOPED: 127.0.0.1:27017 QUERY        database=spark_development collection=hopes selector={"$query"=>{"finish"=>false}, "$orderby"=>{"follows"=>-1}} flags=[:slave_ok] limit=25 skip=0 batch_size=nil fields=nil (0.3662ms)
Completed 200 OK in 6ms (Views: 0.3ms)


Started GET "/home?reading=new_messages_count" for 127.0.0.1 at 2014-02-15 16:18:37 +0800
Processing by UserHomesController#index as JSON
  Parameters: {"reading"=>"new_messages_count"}
Filter chain halted as :authorize rendered or redirected
Completed 200 OK in 0ms (Views: 0.2ms)


Started GET "/" for 127.0.0.1 at 2014-02-15 16:18:38 +0800
Processing by IndexController#index as HTML
  Rendered index/index.html.erb within layouts/application (1.6ms)
Completed 200 OK in 10ms (Views: 9.3ms)


Started GET "/index/get_hopes?limit=25&skip=0" for 127.0.0.1 at 2014-02-15 16:18:38 +0800
Processing by IndexController#get_hopes as JSON
  Parameters: {"limit"=>"25", "skip"=>"0"}
  MOPED: 127.0.0.1:27017 QUERY        database=spark_development collection=hopes selector={"$query"=>{"finish"=>false}, "$orderby"=>{"follows"=>-1}} flags=[:slave_ok] limit=25 skip=0 batch_size=nil fields=nil (0.4296ms)
Completed 200 OK in 2ms (Views: 0.2ms)


Started GET "/home?reading=new_messages_count" for 127.0.0.1 at 2014-02-15 16:18:40 +0800
Processing by UserHomesController#index as JSON
  Parameters: {"reading"=>"new_messages_count"}
Filter chain halted as :authorize rendered or redirected
Completed 200 OK in 1ms (Views: 0.2ms)


Started GET "/" for 114.249.23.53 at 2014-02-15 16:20:39 +0800
Processing by IndexController#index as HTML
  Rendered index/index.html.erb within layouts/application (715.4ms)
Completed 200 OK in 731ms (Views: 730.3ms)


Started GET "/index/get_hopes?limit=25&skip=0" for 114.249.23.53 at 2014-02-15 16:20:40 +0800
Processing by IndexController#get_hopes as JSON
  Parameters: {"limit"=>"25", "skip"=>"0"}
  MOPED: 127.0.0.1:27017 COMMAND      database=admin command={:ismaster=>1} (0.9999ms)
  MOPED: 127.0.0.1:27017 QUERY        database=spark_development collection=hopes selector={"$query"=>{"finish"=>false}, "$orderby"=>{"follows"=>-1}} flags=[:slave_ok] limit=25 skip=0 batch_size=nil fields=nil (0.3328ms)
Completed 200 OK in 37ms (Views: 0.3ms)


Started GET "/home?reading=new_messages_count" for 114.249.23.53 at 2014-02-15 16:20:42 +0800
Processing by UserHomesController#index as JSON
  Parameters: {"reading"=>"new_messages_count"}
Filter chain halted as :authorize rendered or redirected
Completed 200 OK in 6ms (Views: 0.3ms)


Started GET "/login?platform=SinaWeibo&code=4867fa03eb74fe53259f74c83c4f5947" for 114.249.23.53 at 2014-02-15 16:20:44 +0800
Processing by WatchdogsController#new as HTML
  Parameters: {"platform"=>"SinaWeibo", "code"=>"4867fa03eb74fe53259f74c83c4f5947"}
Completed 500 Internal Server Error in 799ms

NoMethodError (undefined method `timestamping?' for #<Watchdog:0x00000101421178>):
  lib/eleven_helper/mongoid/timestamps/updated_at.rb:33:in `able_to_set_updated_at?'
  app/models/watchdog.rb:19:in `new_dog'
  app/controllers/watchdogs_controller.rb:65:in `login_with_sina_weibo'
  app/controllers/watchdogs_controller.rb:20:in `block in create'
  app/controllers/watchdogs_controller.rb:18:in `create'
  app/controllers/watchdogs_controller.rb:9:in `new'


  Rendered /Users/Eleven/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/gems/actionpack-3.2.6/lib/action_dispatch/middleware/templates/rescues/_trace.erb (4.3ms)
  Rendered /Users/Eleven/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/gems/actionpack-3.2.6/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.4ms)
  Rendered /Users/Eleven/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/gems/actionpack-3.2.6/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (14.6ms)


Started GET "/" for 114.249.23.53 at 2014-02-15 16:23:59 +0800
Processing by IndexController#index as HTML
  Rendered index/index.html.erb within layouts/application (643.1ms)
Completed 200 OK in 660ms (Views: 659.5ms)


Started GET "/index/get_hopes?limit=25&skip=0" for 114.249.23.53 at 2014-02-15 16:24:00 +0800
Processing by IndexController#get_hopes as JSON
  Parameters: {"limit"=>"25", "skip"=>"0"}
  MOPED: 127.0.0.1:27017 COMMAND      database=admin command={:ismaster=>1} (1.0419ms)
  MOPED: 127.0.0.1:27017 QUERY        database=spark_development collection=hopes selector={"$query"=>{"finish"=>false}, "$orderby"=>{"follows"=>-1}} flags=[:slave_ok] limit=25 skip=0 batch_size=nil fields=nil (0.4179ms)
Completed 200 OK in 37ms (Views: 0.4ms)


Started GET "/home?reading=new_messages_count" for 114.249.23.53 at 2014-02-15 16:24:02 +0800
Processing by UserHomesController#index as JSON
  Parameters: {"reading"=>"new_messages_count"}
Filter chain halted as :authorize rendered or redirected
Completed 200 OK in 1ms (Views: 0.2ms)


Started GET "/login?platform=SinaWeibo&code=cc9a30dcc25b49dc8cd6c3020fd1808f" for 114.249.23.53 at 2014-02-15 16:24:03 +0800
Processing by WatchdogsController#new as HTML
  Parameters: {"platform"=>"SinaWeibo", "code"=>"cc9a30dcc25b49dc8cd6c3020fd1808f"}
Completed 500 Internal Server Error in 737ms

NoMethodError (undefined method `timestamping?' for #<Watchdog:0x00000103b778d0>):
  lib/eleven_helper/mongoid/timestamps/updated_at.rb:33:in `able_to_set_updated_at?'
  app/models/watchdog.rb:19:in `new_dog'
  app/controllers/watchdogs_controller.rb:65:in `login_with_sina_weibo'
  app/controllers/watchdogs_controller.rb:20:in `block in create'
  app/controllers/watchdogs_controller.rb:18:in `create'
  app/controllers/watchdogs_controller.rb:9:in `new'


  Rendered /Users/Eleven/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/gems/actionpack-3.2.6/lib/action_dispatch/middleware/templates/rescues/_trace.erb (4.0ms)
  Rendered /Users/Eleven/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/gems/actionpack-3.2.6/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.4ms)
  Rendered /Users/Eleven/.rvm/rubies/ruby-2.1.0/lib/ruby/gems/2.1.0/gems/actionpack-3.2.6/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (13.3ms)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0.5ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
MONGODB [DEBUG] Logging level is currently :debug which could negatively impact client-side performance. You should set your logging level no lower than :info in production.
MONGODB (0.5ms) admin['$cmd'].find({:ismaster=>1}).limit(-1)
